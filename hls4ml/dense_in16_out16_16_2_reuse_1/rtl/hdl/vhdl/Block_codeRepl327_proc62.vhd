-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Block_codeRepl327_proc62 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_data_V_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_0_full_n : IN STD_LOGIC;
    in_local_V_data_V_0_write : OUT STD_LOGIC;
    in_local_V_data_V_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_1_full_n : IN STD_LOGIC;
    in_local_V_data_V_1_write : OUT STD_LOGIC;
    in_local_V_data_V_2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_2_full_n : IN STD_LOGIC;
    in_local_V_data_V_2_write : OUT STD_LOGIC;
    in_local_V_data_V_3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_3_full_n : IN STD_LOGIC;
    in_local_V_data_V_3_write : OUT STD_LOGIC;
    in_local_V_data_V_4_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_4_full_n : IN STD_LOGIC;
    in_local_V_data_V_4_write : OUT STD_LOGIC;
    in_local_V_data_V_5_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_5_full_n : IN STD_LOGIC;
    in_local_V_data_V_5_write : OUT STD_LOGIC;
    in_local_V_data_V_6_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_6_full_n : IN STD_LOGIC;
    in_local_V_data_V_6_write : OUT STD_LOGIC;
    in_local_V_data_V_7_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_7_full_n : IN STD_LOGIC;
    in_local_V_data_V_7_write : OUT STD_LOGIC;
    in_local_V_data_V_8_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_8_full_n : IN STD_LOGIC;
    in_local_V_data_V_8_write : OUT STD_LOGIC;
    in_local_V_data_V_9_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_9_full_n : IN STD_LOGIC;
    in_local_V_data_V_9_write : OUT STD_LOGIC;
    in_local_V_data_V_10_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_10_full_n : IN STD_LOGIC;
    in_local_V_data_V_10_write : OUT STD_LOGIC;
    in_local_V_data_V_11_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_11_full_n : IN STD_LOGIC;
    in_local_V_data_V_11_write : OUT STD_LOGIC;
    in_local_V_data_V_12_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_12_full_n : IN STD_LOGIC;
    in_local_V_data_V_12_write : OUT STD_LOGIC;
    in_local_V_data_V_13_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_13_full_n : IN STD_LOGIC;
    in_local_V_data_V_13_write : OUT STD_LOGIC;
    in_local_V_data_V_14_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_14_full_n : IN STD_LOGIC;
    in_local_V_data_V_14_write : OUT STD_LOGIC;
    in_local_V_data_V_15_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_V_15_full_n : IN STD_LOGIC;
    in_local_V_data_V_15_write : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of Block_codeRepl327_proc62 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_FF2 : STD_LOGIC_VECTOR (11 downto 0) := "111111110010";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln20_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_data_V_0_blk_n : STD_LOGIC;
    signal in_local_V_data_V_1_blk_n : STD_LOGIC;
    signal in_local_V_data_V_2_blk_n : STD_LOGIC;
    signal in_local_V_data_V_3_blk_n : STD_LOGIC;
    signal in_local_V_data_V_4_blk_n : STD_LOGIC;
    signal in_local_V_data_V_5_blk_n : STD_LOGIC;
    signal in_local_V_data_V_6_blk_n : STD_LOGIC;
    signal in_local_V_data_V_7_blk_n : STD_LOGIC;
    signal in_local_V_data_V_8_blk_n : STD_LOGIC;
    signal in_local_V_data_V_9_blk_n : STD_LOGIC;
    signal in_local_V_data_V_10_blk_n : STD_LOGIC;
    signal in_local_V_data_V_11_blk_n : STD_LOGIC;
    signal in_local_V_data_V_12_blk_n : STD_LOGIC;
    signal in_local_V_data_V_13_blk_n : STD_LOGIC;
    signal in_local_V_data_V_14_blk_n : STD_LOGIC;
    signal in_local_V_data_V_15_blk_n : STD_LOGIC;
    signal add_ln20_fu_293_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln20_reg_916 : STD_LOGIC_VECTOR (4 downto 0);
    signal io_acc_block_signal_op54 : STD_LOGIC;
    signal ap_block_state2 : BOOLEAN;
    signal in_data_tmp_reg_921 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln203_fu_308_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln203_reg_927 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln22_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln22_reg_932 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_937 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal p_Result_i_reg_942 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_514_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_reg_947 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln571_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_952 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln570_fu_544_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln570_reg_958 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal select_ln581_fu_575_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln581_reg_963 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln583_fu_589_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln583_reg_969 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln603_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_reg_974 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_reg_979 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_1_fu_704_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_1_reg_984 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln603_2_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_reg_989 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln203_fu_907_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ctype_data_V_1_0_reg_250 : STD_LOGIC_VECTOR (255 downto 0);
    signal is_last_1_i_0_out_0_reg_262 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal j_0_i_0_reg_273 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_284_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln696_fu_488_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln557_fu_492_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_s_fu_527_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_fu_534_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal sub_ln461_fu_538_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln461_fu_524_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln575_fu_551_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_563_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_569_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_599_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln696_1_fu_615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_618_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_1_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_626_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln582_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_1_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_fu_724_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_fu_730_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_734_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln581_1_fu_727_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln604_fu_743_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln586_fu_739_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_fu_748_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_2_fu_755_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_768_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_184_fu_775_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln603_3_fu_761_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln203_fu_787_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln203_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln203_1_fu_791_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal xor_ln203_fu_799_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln203_fu_805_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln203_2_fu_821_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln203_1_fu_813_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal xor_ln203_1_fu_829_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln203_2_fu_795_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal zext_ln203_3_fu_835_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal shl_ln203_fu_847_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal tmp_6_fu_853_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal zext_ln203_4_fu_839_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal zext_ln203_5_fu_843_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal shl_ln203_1_fu_871_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal lshr_ln203_fu_877_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal and_ln203_fu_883_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal xor_ln203_2_fu_889_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal select_ln203_3_fu_863_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal and_ln203_1_fu_895_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal and_ln203_2_fu_901_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_fu_284_ce : STD_LOGIC;
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_in_last_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal in_r_TVALID_int : STD_LOGIC;
    signal in_r_TREADY_int : STD_LOGIC;
    signal regslice_both_in_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_data_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal regslice_both_in_data_U_vld_out : STD_LOGIC;
    signal regslice_both_in_data_U_ack_in : STD_LOGIC;

    component myproject_axi_fpext_32ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    myproject_axi_fpext_32ns_64_2_1_U1 : component myproject_axi_fpext_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_r_TDATA_int,
        ce => grp_fu_284_ce,
        dout => grp_fu_284_p1);

    regslice_both_in_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_r_TLAST,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_last_V_U_ack_in,
        data_out => in_r_TLAST_int,
        vld_out => in_r_TVALID_int,
        ack_out => in_r_TREADY_int,
        apdone_blk => regslice_both_in_last_V_U_apdone_blk);

    regslice_both_in_data_U : component regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_data_U_ack_in,
        data_out => in_r_TDATA_int,
        vld_out => regslice_both_in_data_U_vld_out,
        ack_out => in_r_TREADY_int,
        apdone_blk => regslice_both_in_data_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
                    ap_return_preg <= is_last_1_i_0_out_0_reg_262;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    is_last_1_i_0_out_0_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                is_last_1_i_0_out_0_reg_262 <= or_ln22_reg_932;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                is_last_1_i_0_out_0_reg_262 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    j_0_i_0_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                j_0_i_0_reg_273 <= add_ln20_reg_916;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_0_i_0_reg_273 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln20_reg_916 <= add_ln20_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                and_ln603_reg_974 <= and_ln603_fu_692_p2;
                or_ln603_2_reg_989 <= or_ln603_2_fu_718_p2;
                or_ln603_reg_979 <= or_ln603_fu_698_p2;
                select_ln570_reg_958 <= select_ln570_fu_544_p3;
                select_ln581_reg_963 <= select_ln581_fu_575_p3;
                select_ln603_1_reg_984 <= select_ln603_1_fu_704_p3;
                trunc_ln583_reg_969 <= trunc_ln583_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                ctype_data_V_1_0_reg_250 <= or_ln203_fu_907_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln571_reg_952 <= icmp_ln571_fu_518_p2;
                p_Result_i_reg_942 <= bitcast_ln696_fu_488_p1(62 downto 52);
                tmp_3_reg_937 <= bitcast_ln696_fu_488_p1(63 downto 63);
                trunc_ln565_reg_947 <= trunc_ln565_fu_514_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0))) then
                in_data_tmp_reg_921 <= in_r_TDATA_int;
                or_ln22_reg_932 <= or_ln22_fu_312_p2;
                trunc_ln203_reg_927 <= trunc_ln203_fu_308_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln20_fu_293_p2 <= std_logic_vector(unsigned(j_0_i_0_reg_273) + unsigned(ap_const_lv5_1));
    add_ln581_fu_563_p2 <= std_logic_vector(signed(ap_const_lv12_FF2) + signed(sub_ln575_fu_551_p2));
    and_ln203_1_fu_895_p2 <= (xor_ln203_2_fu_889_p2 and ctype_data_V_1_0_reg_250);
    and_ln203_2_fu_901_p2 <= (select_ln203_3_fu_863_p3 and and_ln203_fu_883_p2);
    and_ln203_fu_883_p2 <= (shl_ln203_1_fu_871_p2 and lshr_ln203_fu_877_p2);
    and_ln581_fu_656_p2 <= (xor_ln582_fu_650_p2 and icmp_ln581_fu_557_p2);
    and_ln582_fu_639_p2 <= (xor_ln571_fu_634_p2 and icmp_ln582_fu_583_p2);
    and_ln585_1_fu_674_p2 <= (icmp_ln585_fu_593_p2 and and_ln581_fu_656_p2);
    and_ln585_fu_668_p2 <= (xor_ln585_fu_662_p2 and and_ln581_fu_656_p2);
    and_ln603_fu_692_p2 <= (xor_ln581_fu_686_p2 and icmp_ln603_fu_609_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
                ap_block_state2 <= (((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    ap_return_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, is_last_1_i_0_out_0_reg_262, ap_return_preg, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            ap_return <= is_last_1_i_0_out_0_reg_262;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    ashr_ln586_fu_734_p2 <= std_logic_vector(shift_right(signed(select_ln570_reg_958),to_integer(unsigned('0' & zext_ln586_fu_730_p1(31-1 downto 0)))));
    bitcast_ln696_1_fu_615_p1 <= in_data_tmp_reg_921;
    bitcast_ln696_fu_488_p1 <= grp_fu_284_p1;
    empty_184_fu_775_p2 <= (shl_ln_fu_768_p3 or ap_const_lv8_F);

    grp_fu_284_ce_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, ap_CS_fsm_state3, in_r_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_284_ce <= ap_const_logic_1;
        else 
            grp_fu_284_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln203_fu_781_p2 <= "1" when (unsigned(shl_ln_fu_768_p3) > unsigned(empty_184_fu_775_p2)) else "0";
    icmp_ln20_fu_287_p2 <= "1" when (j_0_i_0_reg_273 = ap_const_lv5_10) else "0";
    icmp_ln571_fu_518_p2 <= "1" when (trunc_ln557_fu_492_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_557_p2 <= "1" when (signed(sub_ln575_fu_551_p2) > signed(ap_const_lv12_E)) else "0";
    icmp_ln582_fu_583_p2 <= "1" when (sub_ln575_fu_551_p2 = ap_const_lv12_E) else "0";
    icmp_ln585_fu_593_p2 <= "1" when (unsigned(select_ln581_fu_575_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_fu_609_p2 <= "1" when (tmp_4_fu_599_p4 = ap_const_lv8_0) else "0";

    in_local_V_data_V_0_blk_n_assign_proc : process(in_local_V_data_V_0_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_0_blk_n <= in_local_V_data_V_0_full_n;
        else 
            in_local_V_data_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_0_din <= ctype_data_V_1_0_reg_250(16 - 1 downto 0);

    in_local_V_data_V_0_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_0_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_0_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_10_blk_n_assign_proc : process(in_local_V_data_V_10_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_10_blk_n <= in_local_V_data_V_10_full_n;
        else 
            in_local_V_data_V_10_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_10_din <= ctype_data_V_1_0_reg_250(175 downto 160);

    in_local_V_data_V_10_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_10_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_10_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_11_blk_n_assign_proc : process(in_local_V_data_V_11_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_11_blk_n <= in_local_V_data_V_11_full_n;
        else 
            in_local_V_data_V_11_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_11_din <= ctype_data_V_1_0_reg_250(191 downto 176);

    in_local_V_data_V_11_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_11_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_11_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_12_blk_n_assign_proc : process(in_local_V_data_V_12_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_12_blk_n <= in_local_V_data_V_12_full_n;
        else 
            in_local_V_data_V_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_12_din <= ctype_data_V_1_0_reg_250(207 downto 192);

    in_local_V_data_V_12_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_12_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_12_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_13_blk_n_assign_proc : process(in_local_V_data_V_13_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_13_blk_n <= in_local_V_data_V_13_full_n;
        else 
            in_local_V_data_V_13_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_13_din <= ctype_data_V_1_0_reg_250(223 downto 208);

    in_local_V_data_V_13_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_13_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_13_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_14_blk_n_assign_proc : process(in_local_V_data_V_14_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_14_blk_n <= in_local_V_data_V_14_full_n;
        else 
            in_local_V_data_V_14_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_14_din <= ctype_data_V_1_0_reg_250(239 downto 224);

    in_local_V_data_V_14_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_14_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_14_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_15_blk_n_assign_proc : process(in_local_V_data_V_15_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_15_blk_n <= in_local_V_data_V_15_full_n;
        else 
            in_local_V_data_V_15_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_15_din <= ctype_data_V_1_0_reg_250(255 downto 240);

    in_local_V_data_V_15_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_15_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_15_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_1_blk_n_assign_proc : process(in_local_V_data_V_1_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_1_blk_n <= in_local_V_data_V_1_full_n;
        else 
            in_local_V_data_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_1_din <= ctype_data_V_1_0_reg_250(31 downto 16);

    in_local_V_data_V_1_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_1_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_1_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_2_blk_n_assign_proc : process(in_local_V_data_V_2_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_2_blk_n <= in_local_V_data_V_2_full_n;
        else 
            in_local_V_data_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_2_din <= ctype_data_V_1_0_reg_250(47 downto 32);

    in_local_V_data_V_2_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_2_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_2_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_3_blk_n_assign_proc : process(in_local_V_data_V_3_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_3_blk_n <= in_local_V_data_V_3_full_n;
        else 
            in_local_V_data_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_3_din <= ctype_data_V_1_0_reg_250(63 downto 48);

    in_local_V_data_V_3_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_3_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_3_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_4_blk_n_assign_proc : process(in_local_V_data_V_4_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_4_blk_n <= in_local_V_data_V_4_full_n;
        else 
            in_local_V_data_V_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_4_din <= ctype_data_V_1_0_reg_250(79 downto 64);

    in_local_V_data_V_4_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_4_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_4_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_5_blk_n_assign_proc : process(in_local_V_data_V_5_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_5_blk_n <= in_local_V_data_V_5_full_n;
        else 
            in_local_V_data_V_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_5_din <= ctype_data_V_1_0_reg_250(95 downto 80);

    in_local_V_data_V_5_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_5_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_5_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_6_blk_n_assign_proc : process(in_local_V_data_V_6_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_6_blk_n <= in_local_V_data_V_6_full_n;
        else 
            in_local_V_data_V_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_6_din <= ctype_data_V_1_0_reg_250(111 downto 96);

    in_local_V_data_V_6_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_6_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_6_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_7_blk_n_assign_proc : process(in_local_V_data_V_7_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_7_blk_n <= in_local_V_data_V_7_full_n;
        else 
            in_local_V_data_V_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_7_din <= ctype_data_V_1_0_reg_250(127 downto 112);

    in_local_V_data_V_7_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_7_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_7_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_8_blk_n_assign_proc : process(in_local_V_data_V_8_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_8_blk_n <= in_local_V_data_V_8_full_n;
        else 
            in_local_V_data_V_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_8_din <= ctype_data_V_1_0_reg_250(143 downto 128);

    in_local_V_data_V_8_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_8_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_8_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_V_9_blk_n_assign_proc : process(in_local_V_data_V_9_full_n, ap_CS_fsm_state2, icmp_ln20_fu_287_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_9_blk_n <= in_local_V_data_V_9_full_n;
        else 
            in_local_V_data_V_9_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_V_9_din <= ctype_data_V_1_0_reg_250(159 downto 144);

    in_local_V_data_V_9_write_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            in_local_V_data_V_9_write <= ap_const_logic_1;
        else 
            in_local_V_data_V_9_write <= ap_const_logic_0;
        end if; 
    end process;


    in_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, in_r_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0))) then 
            in_r_TDATA_blk_n <= in_r_TVALID_int;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_r_TREADY_assign_proc : process(in_r_TVALID, regslice_both_in_last_V_U_ack_in)
    begin
        if (((regslice_both_in_last_V_U_ack_in = ap_const_logic_1) and (in_r_TVALID = ap_const_logic_1))) then 
            in_r_TREADY <= ap_const_logic_1;
        else 
            in_r_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    in_r_TREADY_int_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0))) then 
            in_r_TREADY_int <= ap_const_logic_1;
        else 
            in_r_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_287_p2, io_acc_block_signal_op54, in_r_TVALID_int)
    begin
        if ((not((((io_acc_block_signal_op54 = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1)) or ((in_r_TVALID_int = ap_const_logic_0) and (icmp_ln20_fu_287_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln20_fu_287_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op54 <= (in_local_V_data_V_9_full_n and in_local_V_data_V_8_full_n and in_local_V_data_V_7_full_n and in_local_V_data_V_6_full_n and in_local_V_data_V_5_full_n and in_local_V_data_V_4_full_n and in_local_V_data_V_3_full_n and in_local_V_data_V_2_full_n and in_local_V_data_V_1_full_n and in_local_V_data_V_15_full_n and in_local_V_data_V_14_full_n and in_local_V_data_V_13_full_n and in_local_V_data_V_12_full_n and in_local_V_data_V_11_full_n and in_local_V_data_V_10_full_n and in_local_V_data_V_0_full_n);
    lshr_ln203_fu_877_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv256_lc_1),to_integer(unsigned('0' & zext_ln203_5_fu_843_p1(31-1 downto 0)))));
    or_ln203_fu_907_p2 <= (and_ln203_2_fu_901_p2 or and_ln203_1_fu_895_p2);
    or_ln22_fu_312_p2 <= (is_last_1_i_0_out_0_reg_262 or in_r_TLAST_int);
    or_ln581_fu_680_p2 <= (or_ln582_fu_645_p2 or icmp_ln581_fu_557_p2);
    or_ln582_fu_645_p2 <= (icmp_ln582_fu_583_p2 or icmp_ln571_reg_952);
    or_ln603_1_fu_712_p2 <= (and_ln585_fu_668_p2 or and_ln582_fu_639_p2);
    or_ln603_2_fu_718_p2 <= (or_ln603_fu_698_p2 or or_ln603_1_fu_712_p2);
    or_ln603_fu_698_p2 <= (and_ln603_fu_692_p2 or and_ln585_1_fu_674_p2);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln203_1_fu_813_p3 <= 
        zext_ln203_1_fu_791_p1 when (icmp_ln203_fu_781_p2(0) = '1') else 
        zext_ln203_fu_787_p1;
    select_ln203_2_fu_821_p3 <= 
        xor_ln203_fu_799_p2 when (icmp_ln203_fu_781_p2(0) = '1') else 
        zext_ln203_fu_787_p1;
    select_ln203_3_fu_863_p3 <= 
        tmp_6_fu_853_p4 when (icmp_ln203_fu_781_p2(0) = '1') else 
        shl_ln203_fu_847_p2;
    select_ln203_fu_805_p3 <= 
        zext_ln203_fu_787_p1 when (icmp_ln203_fu_781_p2(0) = '1') else 
        zext_ln203_1_fu_791_p1;
    select_ln570_fu_544_p3 <= 
        sub_ln461_fu_538_p2 when (tmp_3_reg_937(0) = '1') else 
        zext_ln569_fu_534_p1;
    select_ln581_fu_575_p3 <= 
        add_ln581_fu_563_p2 when (icmp_ln581_fu_557_p2(0) = '1') else 
        sub_ln581_fu_569_p2;
    select_ln588_fu_626_p3 <= 
        ap_const_lv16_FFFF when (tmp_5_fu_618_p3(0) = '1') else 
        ap_const_lv16_0;
    select_ln603_1_fu_704_p3 <= 
        select_ln588_fu_626_p3 when (and_ln585_fu_668_p2(0) = '1') else 
        trunc_ln583_fu_589_p1;
    select_ln603_2_fu_755_p3 <= 
        select_ln603_fu_748_p3 when (or_ln603_reg_979(0) = '1') else 
        select_ln603_1_reg_984;
    select_ln603_3_fu_761_p3 <= 
        select_ln603_2_fu_755_p3 when (or_ln603_2_reg_989(0) = '1') else 
        ap_const_lv16_0;
    select_ln603_fu_748_p3 <= 
        shl_ln604_fu_743_p2 when (and_ln603_reg_974(0) = '1') else 
        trunc_ln586_fu_739_p1;
        sext_ln581_1_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln581_reg_963),16));

        sext_ln581_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln581_reg_963),32));

    shl_ln203_1_fu_871_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv256_lc_1),to_integer(unsigned('0' & zext_ln203_4_fu_839_p1(31-1 downto 0)))));
    shl_ln203_fu_847_p2 <= std_logic_vector(shift_left(unsigned(zext_ln203_2_fu_795_p1),to_integer(unsigned('0' & zext_ln203_3_fu_835_p1(31-1 downto 0)))));
    shl_ln604_fu_743_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_969),to_integer(unsigned('0' & sext_ln581_1_fu_727_p1(16-1 downto 0)))));
    shl_ln_fu_768_p3 <= (trunc_ln203_reg_927 & ap_const_lv4_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln461_fu_538_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_fu_534_p1));
    sub_ln575_fu_551_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_524_p1));
    sub_ln581_fu_569_p2 <= std_logic_vector(unsigned(ap_const_lv12_E) - unsigned(sub_ln575_fu_551_p2));
    tmp_4_fu_599_p4 <= select_ln581_fu_575_p3(11 downto 4);
    tmp_5_fu_618_p3 <= bitcast_ln696_1_fu_615_p1(31 downto 31);
    
    tmp_6_fu_853_p4_proc : process(shl_ln203_fu_847_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(256+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(256+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(256 - 1 downto 0);
    variable tmp_6_fu_853_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(256 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(256 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(256 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_FF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := shl_ln203_fu_847_p2;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(256-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(256-1-unsigned(ap_const_lv32_FF(8-1 downto 0)));
            for tmp_6_fu_853_p4_i in 0 to 256-1 loop
                v0_cpy(tmp_6_fu_853_p4_i) := shl_ln203_fu_847_p2(256-1-tmp_6_fu_853_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(256-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_6_fu_853_p4 <= resvalue(256-1 downto 0);
    end process;

    tmp_s_fu_527_p3 <= (ap_const_lv1_1 & trunc_ln565_reg_947);
    trunc_ln203_fu_308_p1 <= j_0_i_0_reg_273(4 - 1 downto 0);
    trunc_ln557_fu_492_p1 <= bitcast_ln696_fu_488_p1(63 - 1 downto 0);
    trunc_ln565_fu_514_p1 <= bitcast_ln696_fu_488_p1(52 - 1 downto 0);
    trunc_ln583_fu_589_p1 <= select_ln570_fu_544_p3(16 - 1 downto 0);
    trunc_ln586_fu_739_p1 <= ashr_ln586_fu_734_p2(16 - 1 downto 0);
    xor_ln203_1_fu_829_p2 <= (select_ln203_fu_805_p3 xor ap_const_lv9_FF);
    xor_ln203_2_fu_889_p2 <= (ap_const_lv256_lc_1 xor and_ln203_fu_883_p2);
    xor_ln203_fu_799_p2 <= (zext_ln203_fu_787_p1 xor ap_const_lv9_FF);
    xor_ln571_fu_634_p2 <= (icmp_ln571_reg_952 xor ap_const_lv1_1);
    xor_ln581_fu_686_p2 <= (or_ln581_fu_680_p2 xor ap_const_lv1_1);
    xor_ln582_fu_650_p2 <= (or_ln582_fu_645_p2 xor ap_const_lv1_1);
    xor_ln585_fu_662_p2 <= (icmp_ln585_fu_593_p2 xor ap_const_lv1_1);
    zext_ln203_1_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_184_fu_775_p2),9));
    zext_ln203_2_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln603_3_fu_761_p3),256));
    zext_ln203_3_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_2_fu_821_p3),256));
    zext_ln203_4_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_1_fu_813_p3),256));
    zext_ln203_5_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln203_1_fu_829_p2),256));
    zext_ln203_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_768_p3),9));
    zext_ln461_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_reg_942),12));
    zext_ln569_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_527_p3),54));
    zext_ln586_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_724_p1),54));
end behav;
