// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Block_codeRepl327_proc62 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_r_TLAST,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TDATA,
        in_local_V_data_V_0_din,
        in_local_V_data_V_0_full_n,
        in_local_V_data_V_0_write,
        in_local_V_data_V_1_din,
        in_local_V_data_V_1_full_n,
        in_local_V_data_V_1_write,
        in_local_V_data_V_2_din,
        in_local_V_data_V_2_full_n,
        in_local_V_data_V_2_write,
        in_local_V_data_V_3_din,
        in_local_V_data_V_3_full_n,
        in_local_V_data_V_3_write,
        in_local_V_data_V_4_din,
        in_local_V_data_V_4_full_n,
        in_local_V_data_V_4_write,
        in_local_V_data_V_5_din,
        in_local_V_data_V_5_full_n,
        in_local_V_data_V_5_write,
        in_local_V_data_V_6_din,
        in_local_V_data_V_6_full_n,
        in_local_V_data_V_6_write,
        in_local_V_data_V_7_din,
        in_local_V_data_V_7_full_n,
        in_local_V_data_V_7_write,
        in_local_V_data_V_8_din,
        in_local_V_data_V_8_full_n,
        in_local_V_data_V_8_write,
        in_local_V_data_V_9_din,
        in_local_V_data_V_9_full_n,
        in_local_V_data_V_9_write,
        in_local_V_data_V_10_din,
        in_local_V_data_V_10_full_n,
        in_local_V_data_V_10_write,
        in_local_V_data_V_11_din,
        in_local_V_data_V_11_full_n,
        in_local_V_data_V_11_write,
        in_local_V_data_V_12_din,
        in_local_V_data_V_12_full_n,
        in_local_V_data_V_12_write,
        in_local_V_data_V_13_din,
        in_local_V_data_V_13_full_n,
        in_local_V_data_V_13_write,
        in_local_V_data_V_14_din,
        in_local_V_data_V_14_full_n,
        in_local_V_data_V_14_write,
        in_local_V_data_V_15_din,
        in_local_V_data_V_15_full_n,
        in_local_V_data_V_15_write,
        ap_return
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [0:0] in_r_TLAST;
input   in_r_TVALID;
output   in_r_TREADY;
input  [31:0] in_r_TDATA;
output  [15:0] in_local_V_data_V_0_din;
input   in_local_V_data_V_0_full_n;
output   in_local_V_data_V_0_write;
output  [15:0] in_local_V_data_V_1_din;
input   in_local_V_data_V_1_full_n;
output   in_local_V_data_V_1_write;
output  [15:0] in_local_V_data_V_2_din;
input   in_local_V_data_V_2_full_n;
output   in_local_V_data_V_2_write;
output  [15:0] in_local_V_data_V_3_din;
input   in_local_V_data_V_3_full_n;
output   in_local_V_data_V_3_write;
output  [15:0] in_local_V_data_V_4_din;
input   in_local_V_data_V_4_full_n;
output   in_local_V_data_V_4_write;
output  [15:0] in_local_V_data_V_5_din;
input   in_local_V_data_V_5_full_n;
output   in_local_V_data_V_5_write;
output  [15:0] in_local_V_data_V_6_din;
input   in_local_V_data_V_6_full_n;
output   in_local_V_data_V_6_write;
output  [15:0] in_local_V_data_V_7_din;
input   in_local_V_data_V_7_full_n;
output   in_local_V_data_V_7_write;
output  [15:0] in_local_V_data_V_8_din;
input   in_local_V_data_V_8_full_n;
output   in_local_V_data_V_8_write;
output  [15:0] in_local_V_data_V_9_din;
input   in_local_V_data_V_9_full_n;
output   in_local_V_data_V_9_write;
output  [15:0] in_local_V_data_V_10_din;
input   in_local_V_data_V_10_full_n;
output   in_local_V_data_V_10_write;
output  [15:0] in_local_V_data_V_11_din;
input   in_local_V_data_V_11_full_n;
output   in_local_V_data_V_11_write;
output  [15:0] in_local_V_data_V_12_din;
input   in_local_V_data_V_12_full_n;
output   in_local_V_data_V_12_write;
output  [15:0] in_local_V_data_V_13_din;
input   in_local_V_data_V_13_full_n;
output   in_local_V_data_V_13_write;
output  [15:0] in_local_V_data_V_14_din;
input   in_local_V_data_V_14_full_n;
output   in_local_V_data_V_14_write;
output  [15:0] in_local_V_data_V_15_din;
input   in_local_V_data_V_15_full_n;
output   in_local_V_data_V_15_write;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_r_TREADY;
reg in_local_V_data_V_0_write;
reg in_local_V_data_V_1_write;
reg in_local_V_data_V_2_write;
reg in_local_V_data_V_3_write;
reg in_local_V_data_V_4_write;
reg in_local_V_data_V_5_write;
reg in_local_V_data_V_6_write;
reg in_local_V_data_V_7_write;
reg in_local_V_data_V_8_write;
reg in_local_V_data_V_9_write;
reg in_local_V_data_V_10_write;
reg in_local_V_data_V_11_write;
reg in_local_V_data_V_12_write;
reg in_local_V_data_V_13_write;
reg in_local_V_data_V_14_write;
reg in_local_V_data_V_15_write;
reg[0:0] ap_return;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_r_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln20_fu_287_p2;
reg    in_local_V_data_V_0_blk_n;
reg    in_local_V_data_V_1_blk_n;
reg    in_local_V_data_V_2_blk_n;
reg    in_local_V_data_V_3_blk_n;
reg    in_local_V_data_V_4_blk_n;
reg    in_local_V_data_V_5_blk_n;
reg    in_local_V_data_V_6_blk_n;
reg    in_local_V_data_V_7_blk_n;
reg    in_local_V_data_V_8_blk_n;
reg    in_local_V_data_V_9_blk_n;
reg    in_local_V_data_V_10_blk_n;
reg    in_local_V_data_V_11_blk_n;
reg    in_local_V_data_V_12_blk_n;
reg    in_local_V_data_V_13_blk_n;
reg    in_local_V_data_V_14_blk_n;
reg    in_local_V_data_V_15_blk_n;
wire   [4:0] add_ln20_fu_293_p2;
reg   [4:0] add_ln20_reg_916;
wire    io_acc_block_signal_op54;
reg    ap_block_state2;
reg   [31:0] in_data_tmp_reg_921;
wire   [3:0] trunc_ln203_fu_308_p1;
reg   [3:0] trunc_ln203_reg_927;
wire   [0:0] or_ln22_fu_312_p2;
reg   [0:0] or_ln22_reg_932;
reg   [0:0] tmp_3_reg_937;
wire    ap_CS_fsm_state3;
reg   [10:0] p_Result_i_reg_942;
wire   [51:0] trunc_ln565_fu_514_p1;
reg   [51:0] trunc_ln565_reg_947;
wire   [0:0] icmp_ln571_fu_518_p2;
reg   [0:0] icmp_ln571_reg_952;
wire   [53:0] select_ln570_fu_544_p3;
reg   [53:0] select_ln570_reg_958;
wire    ap_CS_fsm_state4;
wire  signed [11:0] select_ln581_fu_575_p3;
reg  signed [11:0] select_ln581_reg_963;
wire   [15:0] trunc_ln583_fu_589_p1;
reg   [15:0] trunc_ln583_reg_969;
wire   [0:0] and_ln603_fu_692_p2;
reg   [0:0] and_ln603_reg_974;
wire   [0:0] or_ln603_fu_698_p2;
reg   [0:0] or_ln603_reg_979;
wire   [15:0] select_ln603_1_fu_704_p3;
reg   [15:0] select_ln603_1_reg_984;
wire   [0:0] or_ln603_2_fu_718_p2;
reg   [0:0] or_ln603_2_reg_989;
wire   [255:0] or_ln203_fu_907_p2;
wire    ap_CS_fsm_state5;
reg   [255:0] ctype_data_V_1_0_reg_250;
reg   [0:0] is_last_1_i_0_out_0_reg_262;
reg    ap_block_state1;
reg   [4:0] j_0_i_0_reg_273;
wire   [63:0] grp_fu_284_p1;
wire   [63:0] bitcast_ln696_fu_488_p1;
wire   [62:0] trunc_ln557_fu_492_p1;
wire   [52:0] tmp_s_fu_527_p3;
wire   [53:0] zext_ln569_fu_534_p1;
wire   [53:0] sub_ln461_fu_538_p2;
wire   [11:0] zext_ln461_fu_524_p1;
wire   [11:0] sub_ln575_fu_551_p2;
wire   [0:0] icmp_ln581_fu_557_p2;
wire   [11:0] add_ln581_fu_563_p2;
wire   [11:0] sub_ln581_fu_569_p2;
wire   [7:0] tmp_4_fu_599_p4;
wire   [31:0] bitcast_ln696_1_fu_615_p1;
wire   [0:0] tmp_5_fu_618_p3;
wire   [0:0] icmp_ln582_fu_583_p2;
wire   [0:0] xor_ln571_fu_634_p2;
wire   [0:0] or_ln582_fu_645_p2;
wire   [0:0] xor_ln582_fu_650_p2;
wire   [0:0] icmp_ln585_fu_593_p2;
wire   [0:0] and_ln581_fu_656_p2;
wire   [0:0] xor_ln585_fu_662_p2;
wire   [0:0] or_ln581_fu_680_p2;
wire   [0:0] icmp_ln603_fu_609_p2;
wire   [0:0] xor_ln581_fu_686_p2;
wire   [0:0] and_ln585_1_fu_674_p2;
wire   [0:0] and_ln585_fu_668_p2;
wire   [15:0] select_ln588_fu_626_p3;
wire   [0:0] and_ln582_fu_639_p2;
wire   [0:0] or_ln603_1_fu_712_p2;
wire  signed [31:0] sext_ln581_fu_724_p1;
wire   [53:0] zext_ln586_fu_730_p1;
wire   [53:0] ashr_ln586_fu_734_p2;
wire  signed [15:0] sext_ln581_1_fu_727_p1;
wire   [15:0] shl_ln604_fu_743_p2;
wire   [15:0] trunc_ln586_fu_739_p1;
wire   [15:0] select_ln603_fu_748_p3;
wire   [15:0] select_ln603_2_fu_755_p3;
wire   [7:0] shl_ln_fu_768_p3;
wire   [7:0] empty_184_fu_775_p2;
wire   [15:0] select_ln603_3_fu_761_p3;
wire   [8:0] zext_ln203_fu_787_p1;
wire   [0:0] icmp_ln203_fu_781_p2;
wire   [8:0] zext_ln203_1_fu_791_p1;
wire   [8:0] xor_ln203_fu_799_p2;
wire   [8:0] select_ln203_fu_805_p3;
wire   [8:0] select_ln203_2_fu_821_p3;
wire   [8:0] select_ln203_1_fu_813_p3;
wire   [8:0] xor_ln203_1_fu_829_p2;
wire   [255:0] zext_ln203_2_fu_795_p1;
wire   [255:0] zext_ln203_3_fu_835_p1;
wire   [255:0] shl_ln203_fu_847_p2;
reg   [255:0] tmp_6_fu_853_p4;
wire   [255:0] zext_ln203_4_fu_839_p1;
wire   [255:0] zext_ln203_5_fu_843_p1;
wire   [255:0] shl_ln203_1_fu_871_p2;
wire   [255:0] lshr_ln203_fu_877_p2;
wire   [255:0] and_ln203_fu_883_p2;
wire   [255:0] xor_ln203_2_fu_889_p2;
wire   [255:0] select_ln203_3_fu_863_p3;
wire   [255:0] and_ln203_1_fu_895_p2;
wire   [255:0] and_ln203_2_fu_901_p2;
reg    grp_fu_284_ce;
reg   [0:0] ap_return_preg;
reg   [4:0] ap_NS_fsm;
wire    regslice_both_in_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int;
wire    in_r_TVALID_int;
reg    in_r_TREADY_int;
wire    regslice_both_in_last_V_U_ack_in;
wire    regslice_both_in_data_U_apdone_blk;
wire   [31:0] in_r_TDATA_int;
wire    regslice_both_in_data_U_vld_out;
wire    regslice_both_in_data_U_ack_in;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_return_preg = 1'd0;
end

myproject_axi_fpext_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_axi_fpext_32ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_r_TDATA_int),
    .ce(grp_fu_284_ce),
    .dout(grp_fu_284_p1)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_last_V_U_ack_in),
    .data_out(in_r_TLAST_int),
    .vld_out(in_r_TVALID_int),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_data_U_ack_in),
    .data_out(in_r_TDATA_int),
    .vld_out(regslice_both_in_data_U_vld_out),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_data_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'd0;
    end else begin
        if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
            ap_return_preg <= is_last_1_i_0_out_0_reg_262;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        is_last_1_i_0_out_0_reg_262 <= or_ln22_reg_932;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        is_last_1_i_0_out_0_reg_262 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_0_i_0_reg_273 <= add_ln20_reg_916;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_i_0_reg_273 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln20_reg_916 <= add_ln20_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln603_reg_974 <= and_ln603_fu_692_p2;
        or_ln603_2_reg_989 <= or_ln603_2_fu_718_p2;
        or_ln603_reg_979 <= or_ln603_fu_698_p2;
        select_ln570_reg_958 <= select_ln570_fu_544_p3;
        select_ln581_reg_963 <= select_ln581_fu_575_p3;
        select_ln603_1_reg_984 <= select_ln603_1_fu_704_p3;
        trunc_ln583_reg_969 <= trunc_ln583_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ctype_data_V_1_0_reg_250 <= or_ln203_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln571_reg_952 <= icmp_ln571_fu_518_p2;
        p_Result_i_reg_942 <= {{bitcast_ln696_fu_488_p1[62:52]}};
        tmp_3_reg_937 <= bitcast_ln696_fu_488_p1[32'd63];
        trunc_ln565_reg_947 <= trunc_ln565_fu_514_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd0))) begin
        in_data_tmp_reg_921 <= in_r_TDATA_int;
        or_ln22_reg_932 <= or_ln22_fu_312_p2;
        trunc_ln203_reg_927 <= trunc_ln203_fu_308_p1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        ap_return = is_last_1_i_0_out_0_reg_262;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_284_ce = 1'b1;
    end else begin
        grp_fu_284_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_0_blk_n = in_local_V_data_V_0_full_n;
    end else begin
        in_local_V_data_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_0_write = 1'b1;
    end else begin
        in_local_V_data_V_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_10_blk_n = in_local_V_data_V_10_full_n;
    end else begin
        in_local_V_data_V_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_10_write = 1'b1;
    end else begin
        in_local_V_data_V_10_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_11_blk_n = in_local_V_data_V_11_full_n;
    end else begin
        in_local_V_data_V_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_11_write = 1'b1;
    end else begin
        in_local_V_data_V_11_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_12_blk_n = in_local_V_data_V_12_full_n;
    end else begin
        in_local_V_data_V_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_12_write = 1'b1;
    end else begin
        in_local_V_data_V_12_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_13_blk_n = in_local_V_data_V_13_full_n;
    end else begin
        in_local_V_data_V_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_13_write = 1'b1;
    end else begin
        in_local_V_data_V_13_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_14_blk_n = in_local_V_data_V_14_full_n;
    end else begin
        in_local_V_data_V_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_14_write = 1'b1;
    end else begin
        in_local_V_data_V_14_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_15_blk_n = in_local_V_data_V_15_full_n;
    end else begin
        in_local_V_data_V_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_15_write = 1'b1;
    end else begin
        in_local_V_data_V_15_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_1_blk_n = in_local_V_data_V_1_full_n;
    end else begin
        in_local_V_data_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_1_write = 1'b1;
    end else begin
        in_local_V_data_V_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_2_blk_n = in_local_V_data_V_2_full_n;
    end else begin
        in_local_V_data_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_2_write = 1'b1;
    end else begin
        in_local_V_data_V_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_3_blk_n = in_local_V_data_V_3_full_n;
    end else begin
        in_local_V_data_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_3_write = 1'b1;
    end else begin
        in_local_V_data_V_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_4_blk_n = in_local_V_data_V_4_full_n;
    end else begin
        in_local_V_data_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_4_write = 1'b1;
    end else begin
        in_local_V_data_V_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_5_blk_n = in_local_V_data_V_5_full_n;
    end else begin
        in_local_V_data_V_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_5_write = 1'b1;
    end else begin
        in_local_V_data_V_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_6_blk_n = in_local_V_data_V_6_full_n;
    end else begin
        in_local_V_data_V_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_6_write = 1'b1;
    end else begin
        in_local_V_data_V_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_7_blk_n = in_local_V_data_V_7_full_n;
    end else begin
        in_local_V_data_V_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_7_write = 1'b1;
    end else begin
        in_local_V_data_V_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_8_blk_n = in_local_V_data_V_8_full_n;
    end else begin
        in_local_V_data_V_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_8_write = 1'b1;
    end else begin
        in_local_V_data_V_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_9_blk_n = in_local_V_data_V_9_full_n;
    end else begin
        in_local_V_data_V_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        in_local_V_data_V_9_write = 1'b1;
    end else begin
        in_local_V_data_V_9_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd0))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_in_last_V_U_ack_in == 1'b1) & (in_r_TVALID == 1'b1))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd0))) begin
        in_r_TREADY_int = 1'b1;
    end else begin
        in_r_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_287_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln20_fu_293_p2 = (j_0_i_0_reg_273 + 5'd1);

assign add_ln581_fu_563_p2 = ($signed(12'd4082) + $signed(sub_ln575_fu_551_p2));

assign and_ln203_1_fu_895_p2 = (xor_ln203_2_fu_889_p2 & ctype_data_V_1_0_reg_250);

assign and_ln203_2_fu_901_p2 = (select_ln203_3_fu_863_p3 & and_ln203_fu_883_p2);

assign and_ln203_fu_883_p2 = (shl_ln203_1_fu_871_p2 & lshr_ln203_fu_877_p2);

assign and_ln581_fu_656_p2 = (xor_ln582_fu_650_p2 & icmp_ln581_fu_557_p2);

assign and_ln582_fu_639_p2 = (xor_ln571_fu_634_p2 & icmp_ln582_fu_583_p2);

assign and_ln585_1_fu_674_p2 = (icmp_ln585_fu_593_p2 & and_ln581_fu_656_p2);

assign and_ln585_fu_668_p2 = (xor_ln585_fu_662_p2 & and_ln581_fu_656_p2);

assign and_ln603_fu_692_p2 = (xor_ln581_fu_686_p2 & icmp_ln603_fu_609_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = (((io_acc_block_signal_op54 == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd1)) | ((in_r_TVALID_int == 1'b0) & (icmp_ln20_fu_287_p2 == 1'd0)));
end

assign ap_ready = internal_ap_ready;

assign ashr_ln586_fu_734_p2 = $signed(select_ln570_reg_958) >>> zext_ln586_fu_730_p1;

assign bitcast_ln696_1_fu_615_p1 = in_data_tmp_reg_921;

assign bitcast_ln696_fu_488_p1 = grp_fu_284_p1;

assign empty_184_fu_775_p2 = (shl_ln_fu_768_p3 | 8'd15);

assign icmp_ln203_fu_781_p2 = ((shl_ln_fu_768_p3 > empty_184_fu_775_p2) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_287_p2 = ((j_0_i_0_reg_273 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_518_p2 = ((trunc_ln557_fu_492_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_557_p2 = (($signed(sub_ln575_fu_551_p2) > $signed(12'd14)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_583_p2 = ((sub_ln575_fu_551_p2 == 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_593_p2 = ((select_ln581_fu_575_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_609_p2 = ((tmp_4_fu_599_p4 == 8'd0) ? 1'b1 : 1'b0);

assign in_local_V_data_V_0_din = ctype_data_V_1_0_reg_250[15:0];

assign in_local_V_data_V_10_din = {{ctype_data_V_1_0_reg_250[175:160]}};

assign in_local_V_data_V_11_din = {{ctype_data_V_1_0_reg_250[191:176]}};

assign in_local_V_data_V_12_din = {{ctype_data_V_1_0_reg_250[207:192]}};

assign in_local_V_data_V_13_din = {{ctype_data_V_1_0_reg_250[223:208]}};

assign in_local_V_data_V_14_din = {{ctype_data_V_1_0_reg_250[239:224]}};

assign in_local_V_data_V_15_din = {{ctype_data_V_1_0_reg_250[255:240]}};

assign in_local_V_data_V_1_din = {{ctype_data_V_1_0_reg_250[31:16]}};

assign in_local_V_data_V_2_din = {{ctype_data_V_1_0_reg_250[47:32]}};

assign in_local_V_data_V_3_din = {{ctype_data_V_1_0_reg_250[63:48]}};

assign in_local_V_data_V_4_din = {{ctype_data_V_1_0_reg_250[79:64]}};

assign in_local_V_data_V_5_din = {{ctype_data_V_1_0_reg_250[95:80]}};

assign in_local_V_data_V_6_din = {{ctype_data_V_1_0_reg_250[111:96]}};

assign in_local_V_data_V_7_din = {{ctype_data_V_1_0_reg_250[127:112]}};

assign in_local_V_data_V_8_din = {{ctype_data_V_1_0_reg_250[143:128]}};

assign in_local_V_data_V_9_din = {{ctype_data_V_1_0_reg_250[159:144]}};

assign io_acc_block_signal_op54 = (in_local_V_data_V_9_full_n & in_local_V_data_V_8_full_n & in_local_V_data_V_7_full_n & in_local_V_data_V_6_full_n & in_local_V_data_V_5_full_n & in_local_V_data_V_4_full_n & in_local_V_data_V_3_full_n & in_local_V_data_V_2_full_n & in_local_V_data_V_1_full_n & in_local_V_data_V_15_full_n & in_local_V_data_V_14_full_n & in_local_V_data_V_13_full_n & in_local_V_data_V_12_full_n & in_local_V_data_V_11_full_n & in_local_V_data_V_10_full_n & in_local_V_data_V_0_full_n);

assign lshr_ln203_fu_877_p2 = 256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 >> zext_ln203_5_fu_843_p1;

assign or_ln203_fu_907_p2 = (and_ln203_2_fu_901_p2 | and_ln203_1_fu_895_p2);

assign or_ln22_fu_312_p2 = (is_last_1_i_0_out_0_reg_262 | in_r_TLAST_int);

assign or_ln581_fu_680_p2 = (or_ln582_fu_645_p2 | icmp_ln581_fu_557_p2);

assign or_ln582_fu_645_p2 = (icmp_ln582_fu_583_p2 | icmp_ln571_reg_952);

assign or_ln603_1_fu_712_p2 = (and_ln585_fu_668_p2 | and_ln582_fu_639_p2);

assign or_ln603_2_fu_718_p2 = (or_ln603_fu_698_p2 | or_ln603_1_fu_712_p2);

assign or_ln603_fu_698_p2 = (and_ln603_fu_692_p2 | and_ln585_1_fu_674_p2);

assign select_ln203_1_fu_813_p3 = ((icmp_ln203_fu_781_p2[0:0] === 1'b1) ? zext_ln203_1_fu_791_p1 : zext_ln203_fu_787_p1);

assign select_ln203_2_fu_821_p3 = ((icmp_ln203_fu_781_p2[0:0] === 1'b1) ? xor_ln203_fu_799_p2 : zext_ln203_fu_787_p1);

assign select_ln203_3_fu_863_p3 = ((icmp_ln203_fu_781_p2[0:0] === 1'b1) ? tmp_6_fu_853_p4 : shl_ln203_fu_847_p2);

assign select_ln203_fu_805_p3 = ((icmp_ln203_fu_781_p2[0:0] === 1'b1) ? zext_ln203_fu_787_p1 : zext_ln203_1_fu_791_p1);

assign select_ln570_fu_544_p3 = ((tmp_3_reg_937[0:0] === 1'b1) ? sub_ln461_fu_538_p2 : zext_ln569_fu_534_p1);

assign select_ln581_fu_575_p3 = ((icmp_ln581_fu_557_p2[0:0] === 1'b1) ? add_ln581_fu_563_p2 : sub_ln581_fu_569_p2);

assign select_ln588_fu_626_p3 = ((tmp_5_fu_618_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign select_ln603_1_fu_704_p3 = ((and_ln585_fu_668_p2[0:0] === 1'b1) ? select_ln588_fu_626_p3 : trunc_ln583_fu_589_p1);

assign select_ln603_2_fu_755_p3 = ((or_ln603_reg_979[0:0] === 1'b1) ? select_ln603_fu_748_p3 : select_ln603_1_reg_984);

assign select_ln603_3_fu_761_p3 = ((or_ln603_2_reg_989[0:0] === 1'b1) ? select_ln603_2_fu_755_p3 : 16'd0);

assign select_ln603_fu_748_p3 = ((and_ln603_reg_974[0:0] === 1'b1) ? shl_ln604_fu_743_p2 : trunc_ln586_fu_739_p1);

assign sext_ln581_1_fu_727_p1 = select_ln581_reg_963;

assign sext_ln581_fu_724_p1 = select_ln581_reg_963;

assign shl_ln203_1_fu_871_p2 = 256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 << zext_ln203_4_fu_839_p1;

assign shl_ln203_fu_847_p2 = zext_ln203_2_fu_795_p1 << zext_ln203_3_fu_835_p1;

assign shl_ln604_fu_743_p2 = trunc_ln583_reg_969 << sext_ln581_1_fu_727_p1;

assign shl_ln_fu_768_p3 = {{trunc_ln203_reg_927}, {4'd0}};

assign start_out = real_start;

assign sub_ln461_fu_538_p2 = (54'd0 - zext_ln569_fu_534_p1);

assign sub_ln575_fu_551_p2 = (12'd1075 - zext_ln461_fu_524_p1);

assign sub_ln581_fu_569_p2 = (12'd14 - sub_ln575_fu_551_p2);

assign tmp_4_fu_599_p4 = {{select_ln581_fu_575_p3[11:4]}};

assign tmp_5_fu_618_p3 = bitcast_ln696_1_fu_615_p1[32'd31];

integer ap_tvar_int_0;

always @ (shl_ln203_fu_847_p2) begin
    for (ap_tvar_int_0 = 256 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 255 - 0) begin
            tmp_6_fu_853_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_6_fu_853_p4[ap_tvar_int_0] = shl_ln203_fu_847_p2[255 - ap_tvar_int_0];
        end
    end
end

assign tmp_s_fu_527_p3 = {{1'd1}, {trunc_ln565_reg_947}};

assign trunc_ln203_fu_308_p1 = j_0_i_0_reg_273[3:0];

assign trunc_ln557_fu_492_p1 = bitcast_ln696_fu_488_p1[62:0];

assign trunc_ln565_fu_514_p1 = bitcast_ln696_fu_488_p1[51:0];

assign trunc_ln583_fu_589_p1 = select_ln570_fu_544_p3[15:0];

assign trunc_ln586_fu_739_p1 = ashr_ln586_fu_734_p2[15:0];

assign xor_ln203_1_fu_829_p2 = (select_ln203_fu_805_p3 ^ 9'd255);

assign xor_ln203_2_fu_889_p2 = (256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 ^ and_ln203_fu_883_p2);

assign xor_ln203_fu_799_p2 = (zext_ln203_fu_787_p1 ^ 9'd255);

assign xor_ln571_fu_634_p2 = (icmp_ln571_reg_952 ^ 1'd1);

assign xor_ln581_fu_686_p2 = (or_ln581_fu_680_p2 ^ 1'd1);

assign xor_ln582_fu_650_p2 = (or_ln582_fu_645_p2 ^ 1'd1);

assign xor_ln585_fu_662_p2 = (icmp_ln585_fu_593_p2 ^ 1'd1);

assign zext_ln203_1_fu_791_p1 = empty_184_fu_775_p2;

assign zext_ln203_2_fu_795_p1 = select_ln603_3_fu_761_p3;

assign zext_ln203_3_fu_835_p1 = select_ln203_2_fu_821_p3;

assign zext_ln203_4_fu_839_p1 = select_ln203_1_fu_813_p3;

assign zext_ln203_5_fu_843_p1 = xor_ln203_1_fu_829_p2;

assign zext_ln203_fu_787_p1 = shl_ln_fu_768_p3;

assign zext_ln461_fu_524_p1 = p_Result_i_reg_942;

assign zext_ln569_fu_534_p1 = tmp_s_fu_527_p3;

assign zext_ln586_fu_730_p1 = $unsigned(sext_ln581_fu_724_p1);

endmodule //Block_codeRepl327_proc62
